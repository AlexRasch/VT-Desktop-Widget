name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: released

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: Widget.sln
      Test_Project_Path: WidgetTests\WidgetTests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test
      
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    # Attempt to build Self contained
    - name: Build .NET x64 (Self contained)
      run: dotnet publish -p:PublishSingleFile=true -r win-x64 -c Release --output bin/Publish/win-x64-sc/ --self-contained true
      working-directory: widget
    
    - name: Create .zip file (Self contained)
      shell: pwsh
      working-directory: widget
      run: |
       $outputPath = "./bin/Publish/win-x64-sc/*"
       $zipPath = "C:/VirusTotal-Desktop-Widget-Self-Contained.zip"
       Compress-Archive -Path $outputPath -DestinationPath $zipPath        
        
    # Attempt to build Framework Dependent
    - name: Build .NET x64 (Framework dependent)
      run: dotnet publish -p:PublishSingleFile=true -r win-x64 -c Release --output bin/Publish/win-x64/ --self-contained false
      working-directory: widget
    
    - name: Create .zip file (Framework dependent)
      shell: pwsh
      working-directory: widget
      run: |
       $outputPath = "./bin/Publish/win-x64/*"
       $zipPath = "C:/VirusTotal-Desktop-Widget-Framework-Dependent.zip"
       Compress-Archive -Path $outputPath -DestinationPath $zipPath
      
    - name: Create a new GitHub release if a new tag is pushed
      uses: softprops/action-gh-release@v1 #
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
         C:/VirusTotal-Desktop-Widget-Self-Contained.zip
         C:/VirusTotal-Desktop-Widget-Framework-Dependent.zip
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: win-x64
        path: widget/bin/Publish/win-x64/*
          
