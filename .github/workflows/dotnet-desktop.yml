name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: released

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Widget.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: WidgetTests\WidgetTests.csproj               # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test
      
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    # Attempt to build   
    - name: Build (.NET x64)
      run: dotnet build -c Release  --output bin/Publish/win-x64 -p:PublishSingleFile=true
      working-directory: widget
    
    # Create zip archive
    - name: Create .zip file
      shell: pwsh
      working-directory: widget
      run: |
       $outputPath = "./bin/Publish/win-x64"
       $zipPath = "./bin/Publish/win-x64.zip"
       Compress-Archive -Path $outputPath -DestinationPath $zipPath
      
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Application
        path: ./publish
          
